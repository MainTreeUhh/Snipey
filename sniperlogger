local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
getgenv().Webhook = "https://discord.com/api/webhooks/1354890047761158335/Z4kTwJrHezdG5PhUwj0YnVdgaue2N1eBx9RX7MTBJ3AsS29aHcDJMrHOs24mDRNX1GF9"

local function getLatestUGC()
    local url = "https://catalog.roblox.com/v1/search/items/details?Category=Accessories&SortType=3&Limit=10"
    local success, response = pcall(function()
        return http_request({ Url = url, Method = "GET", Headers = { ["Content-Type"] = "application/json" } })
    end)
    
    if success and response and response.Body then
        local data = HttpService:JSONDecode(response.Body)
        for _, item in pairs(data.data) do
            if item.isLimited and item.priceStatus == "Off Sale" then
                return item.id, item.name
            end
        end
    end
    return nil, nil
end

local function sendWebhook(itemName, timeTaken, assetId)
    local request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request) or (http and http.request)
    local deviceType = UserInputService:GetPlatform() == Enum.Platform.Windows and "üíª" or "üì±"
    local exe = identifyexecutor() or "Unknown Executor"
    local player = game.Players.LocalPlayer
    local gameId = game.PlaceId
    local plyID = player.UserId
    local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    local imageUrl = "https://tr.rbxcdn.com/" .. tostring(assetId) .. "-420-420.png"

    request({
        Url = getgenv().Webhook,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = HttpService:JSONEncode({
            content = "",
            embeds = {
                {
                    title = "**üéâ PLAYER PURCHASED UGC üéä**",
                    description = "",
                    type = "rich",
                    color = 16777215,
                    thumbnail = { url = imageUrl },
                    fields = {
                        {
                            name = "**User Info:**",
                            value = "**üë§ Username**: **[" .. player.Name .. "](https://www.roblox.com/users/" .. player.UserId .. "/profile)**\n**üé≤ Player ID:** **" .. plyID .. "**\n\n**Game Info:**\n**üéÆ Game**: **[" .. gameName .. "](https://www.roblox.com/games/" .. gameId .. ")**\n**üé≤ Game ID:** **" .. gameId .. "**\n\n**System Info:**\n**üõ† Executor**: **" .. exe .. "**\n**üìå Platform**: **" .. deviceType .. "**",
                            inline = true
                        },
                        {
                            name = "**UGC Details:**",
                            value = "**‚è±Ô∏è Time Taken**: **" .. string.format("%.4f", timeTaken) .. " seconds**\n**üõçÔ∏è UGC**: **[" .. itemName .. "](https://www.roblox.com/catalog/" .. assetId .. ")**\n**üÜî UGC ID**: **" .. tostring(assetId) .. "**",
                            inline = true
                        }
                    }
                }
            }
        })
    })
end

local function buyItem(assetId)
    pcall(function()
        MarketplaceService:PromptPurchase(LocalPlayer, assetId)
    end)
end

local function autoPurchaseUGCItem()
    getrenv()._set = clonefunction(setthreadidentity)
    local old
    old = hookmetamethod(game, "__index", function(a, b)
        task.spawn(function()
            _set(7)
            task.wait()
            getgenv().promptpurchaserequestedv2 = MarketplaceService.PromptPurchaseRequestedV2:Connect(function(...)
                local startTime = tick()
                local t = {...}
                local assetId = t[2]
                local idempotencyKey = t[5]
                local purchaseAuthToken = t[6]
                local info = MarketplaceService:GetProductInfo(assetId)

                local itemName = info.Name
                local productId = info.ProductId
                local price = info.PriceInRobux
                local collectibleItemId = info.CollectibleItemId
                local collectibleProductId = info.CollectibleProductId
                local creatorName = info.Creator.Name
                local creatorId = info.Creator.Id
                local description = info.Description
                local assetType = info.AssetTypeId

                if price == 0 then
                    game:GetService("StarterGui"):SetCore("SendNotification", {
                        Title = "PURCHASE ATTEMPT",
                        Text = "UGC IS FREE! ATTEMPTING PURCHASE...",
                        Duration = 5
                    })
                    local success, result = pcall(function()
                        return MarketplaceService:PerformPurchase(Enum.InfoType.Asset, productId, price,
                            tostring(HttpService:GenerateGUID(false)), true, collectibleItemId,
                            collectibleProductId, idempotencyKey, tostring(purchaseAuthToken))
                    end)

                    if success then
                        local endTime = tick()
                        local duration = endTime - startTime
                        game:GetService("StarterGui"):SetCore("SendNotification", {
                            Title = "PURCHASE SUCCESS",
                            Text = "BOUGHT UGC! TOOK " .. tostring(duration) .. " SECONDS",
                            Duration = 5
                        })
                        sendWebhook(itemName, duration, assetId)
                    else
                        game:GetService("StarterGui"):SetCore("SendNotification", {
                            Title = "PURCHASE FAILED",
                            Text = tostring(result),
                            Duration = 5
                        })
                    end
                else
                    game:GetService("StarterGui"):SetCore("SendNotification", {
                        Title = "PURCHASE SKIPPED",
                        Text = "UGC IS NOT FREE, SKIPPING PURCHASE",
                        Duration = 5
                    })
                end
            end)
        end)
        hookmetamethod(game, "__index", old)
        return old(a, b)
    end)
end

autoPurchaseUGCItem()
